
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # Set up directory to transfer
> dir.create("LGRC_microRNA", showWarnings = FALSE)
> dir.create("LGRC_microRNA/fastq", showWarnings = FALSE)
> dir.create("LGRC_microRNA/matrices", showWarnings = FALSE)
> 
> # Read in raw counts and normalized data
> mir.counts.full = read.table("/protected/projects/lgrc/small_RNA/Final_Analysis/Data/MicroRNA/130720_LGRC_miRNA_Counts.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE, check.names=FALSE)
> mir.annotation.full = mir.counts.full[,1:7]
> mir.counts.full = as.matrix(mir.counts.full[,-(1:7)])
> rownames(mir.counts.full) = mir.annotation.full[,5]
> rownames(mir.annotation.full) = mir.annotation.full[,5]
> colnames(mir.annotation.full) = c("Chrom", "Start", "Stop", "Name", "Mature_ID", "Strand", "miRBase_Version")
> 
> library(affy)
Loading required package: BiocGenerics

Attaching package: 'BiocGenerics'

The following objects are masked from 'package:stats':

    IQR, mad, sd, var, xtabs

The following objects are masked from 'package:base':

    Filter, Find, Map, Position, Reduce, anyDuplicated, append,
    as.data.frame, basename, cbind, colnames, dirname, do.call,
    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,
    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,
    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,
    tapply, union, unique, unsplit, which.max, which.min

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

> data <- readRDS("../../Data/MicroRNA/LGRC_MicroRNA_Counts.rds")
> pdata <- pData(data)
> mir.counts.qc <- mir.counts.full[,colnames(data)]
> mir.counts.with.annot <- data.frame(mir.annotation.full, mir.counts.qc)
> 
> mir.rpm = sweep(mir.counts.qc, 2, pdata$Mirna_Reads / 1e6, "/")
> mir.rpm.log2 = log2(mir.rpm+1)
> mir.rpm.with.annot <- data.frame(mir.annotation.full, mir.rpm.log2)
> 
> # Write tables/matrices
> write.table(mir.counts.with.annot, "LGRC_microRNA/matrices/microRNA_raw_counts.txt", quote = FALSE, sep="\t", row.names = FALSE, col.names = TRUE)
> write.table(mir.rpm.with.annot, "LGRC_microRNA/matrices/microRNA_normalized.txt", quote = FALSE, sep="\t", row.names = FALSE, col.names = TRUE)
> 
> # Read table and copy/rename fastq files
> fastq.input <- read.table("../../../Unprotected_lgrc_365/Alignment_Pipeline/130720_param_input.txt", header=FALSE, sep="\t")
> fastq.input <- fastq.input[fastq.input[,2] %in% rownames(pdata),]
> new.name <- paste0("LGRC_microRNA/fastq/", fastq.input[,2], ".fq.gz")
> file.copy(fastq.input[,1], new.name, overwrite = TRUE)
  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[109] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[157] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[169] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[181] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[193] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[205] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[217] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[229] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[241] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[253] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[265] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[277] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[289] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[301] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[313] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[325] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[337] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[349] FALSE FALSE FALSE
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # Get md5 checksum
> library(tools)
> md5 <- md5sum(new.name)
> write.table(cbind(basename(new.name), md5), "md5sum.txt", quote=FALSE, sep="\t", col.names=FALSE, row.names=FALSE)
> 
> # Create metadata table
> demographics = read.table("../../Annotation/Sample_Demographics/111228_LGRC_MicroRNA_Demographics.txt", sep="\t", header=TRUE, quote="", row.names=1, check.names=FALSE)
> demo <- demographics[colnames(data),]
> 
> colnames(pdata) <- tolower(colnames(pdata))
> library_name <- rownames(pdata)
> status <- c("Control", "ILD", "COPD")[pdata$disease + 1]
> pdata$disease <- status
> pdata$copd <- NULL
> pdata$control <- NULL
> pdata$ild <- NULL
> pdata$flow_cell <- as.numeric(as.factor(pdata$flow_cell))
> 
> pdata$cancer_status <- demo$f010qI.1K..Lung.Cancer
> pdata$smoking_status <- demo$Cigarette.smoking
> pdata$smoking_status[grep("^2-Ever", pdata$smoking_status)] <- "2-Ever"
> pdata$gender <- demo$Gender
> pdata$race_ethnicity <- demo$Race.or.Ethnicity
> pdata$cancer <- NULL
> pdata$smoke <- NULL
> pdata$race <- NULL
> pdata$percent_emphysema <- pdata$emphysema
> pdata$emphysema <- NULL
> 
> title <- paste0(library_name, "_", status)
> org <- "Homo sapiens"
> tissue <- "lung"
> ltrc_id <- rownames(pdata)
> raw_file <- basename(new.name)
> processed_data_file1 <- "microRNA_raw_counts.txt"
> processed_data_file2 <- "microRNA_normalized.txt"
> instrument <- ifelse(pdata$protocol == "Singleplex", "Illumina Genome Analyzer IIx", "Illumina HiSeq 2000")
> 
> metadata <- data.frame("library name" = library_name, title = title, organism = org, tissue = tissue, pdata, LTRC_ID = ltrc_id, "single or paired-end" = "single", molecule = "Total RNA", "instrument model" = instrument, "processed data file" = processed_data_file1, "processed data file" = processed_data_file2, "raw file" = raw_file, check.names = FALSE)
> write.table(metadata, "metadata_table.txt", col.names = TRUE, sep="\t", quote=FALSE, row.names=FALSE)
> 
> sessionInfo()
R version 4.1.1 (2021-08-10)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS:   /share/pkg.7/r/4.1.1_noblas/install/lib64/R/lib/libRblas.so
LAPACK: /share/pkg.7/r/4.1.1_noblas/install/lib64/R/lib/libRlapack.so

locale:
[1] C

attached base packages:
[1] tools     stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] affy_1.70.0         Biobase_2.54.0      BiocGenerics_0.40.0

loaded via a namespace (and not attached):
[1] BiocManager_1.30.16   zlibbioc_1.40.0       compiler_4.1.1       
[4] affyio_1.62.0         preprocessCore_1.54.0
> 
