
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(MASS)
> library(affy)
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: 'BiocGenerics'

The following objects are masked from 'package:parallel':

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from 'package:stats':

    IQR, mad, sd, var, xtabs

The following objects are masked from 'package:base':

    Filter, Find, Map, Position, Reduce, anyDuplicated, append,
    as.data.frame, basename, cbind, colnames, dirname, do.call,
    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,
    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,
    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,
    tapply, union, unique, unsplit, which.max, which.min

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

> library(ggplot2)
Warning message:
replacing previous import 'vctrs::data_frame' by 'tibble::data_frame' when loading 'dplyr' 
> 
> seq.all <- read.table(gzfile("mir34c_sequence_counts.txt.gz"), row.names=1, header=TRUE)
> data.counts <- readRDS("../Differential_Expression/LGRC_MicroRNA_Isoform_RPM_Log2_Batch_Corrected_With_Cluster.rds")
> seq.qc <- seq.all[,colnames(data.counts)]
> 
> # Calculate RPM and total
> reads.aligned = data.counts$Mirna_Reads / 1e6
> seq.rpm = sweep(seq.qc, 2, reads.aligned, "/")
> seq.rpm.log2 = log2(seq.rpm+1)
> seq.total <- rowSums(seq.qc)
> 
> # Reorder by average RPM and select the top 25
> seq.rpm.mean <- apply(seq.rpm.log2, 1, mean)
> o <- order(seq.rpm.mean, decreasing = TRUE)[1:25]
> seq.counts <- seq.qc[o,]
> seq.rpm <- seq.rpm[o,]
> seq.rpm.log2 <- seq.rpm.log2[o,]
> seq.rpm.mean <- seq.rpm.mean[o]
> seq.total <- seq.total[o]
> 
> ## Set up covariates
> age = data.counts$Age
> gender = as.factor(data.counts$Gender)
> fev1 = as.numeric(data.counts$FEV1_Percent)
> fev1.fvc = as.numeric(data.counts$FEV1_FVC)
> dlco = as.numeric(data.counts$DLCO)
> bode = as.numeric(data.counts$BODE)
> emphysema = as.numeric(data.counts$Emphysema)
> reads = data.counts$Mirna_Reads / 1e6
> smoke = as.factor(data.counts$Smoke)
> protocol = as.factor(data.counts$Protocol)
> status = as.factor(data.counts$Disease)
> flowcell = as.factor(data.counts$Flow_Cell)
> index = as.factor(data.counts$Index)
> reads.aligned = as.numeric(data.counts$Reads_aligned) / 1e6
> copd = as.factor(data.counts$COPD)
> ild = as.factor(data.counts$ILD)
> disease = as.factor(as.numeric(data.counts$ILD | data.counts$COPD))
> 
> fev1.fvc[fev1.fvc > 1.1] = NA  ## Set 2 patients with abnormally high FEV1/FVC to NA
> 
> ## Perform differential expression analysis using NB linear models
> results.anova <- matrix(NA, nrow=nrow(seq.counts), ncol=12)
> results.summary <- matrix(NA, nrow=nrow(seq.counts), ncol=36)
> for(i in 1:nrow(seq.counts)) {
+   try({
+ 	m1 <- glm.nb(as.numeric(seq.counts[i,]) ~ reads + protocol + smoke + gender + age + status, maxit=10000)
+     m2 <- glm.nb(as.numeric(seq.counts[i,]) ~ reads + protocol + smoke + gender + age, maxit=10000)
+ 
+ 	results.anova[i,] = unlist(anova(m1, m2)[,-c(1, 5)])  # Get rid of 1st and 5th column to make sure it stays numeric
+ 	results.summary[i,] = c(summary(m1)$coefficients)
+   }, silent = TRUE)	
+ }
Warning message:
step size truncated due to divergence 
> results.anova.fdr <- p.adjust(results.anova[,12], "fdr")
> results = cbind(results.summary, results.anova[,12], results.anova.fdr)
> 
> cnames = c("GLM_Intercept", "GLM_Aligned_Reads", "GLM_Protocol", "GLM_Smoke_Former", "GLM_Smoke_Never", "GLM_Gender", "GLM_Age", "GLM_ILD", "GLM_COPD")
> colnames(results) = c(paste(rep(cnames, 4), rep(c("Coef", "Std_Error", "Zvalue", "Pvalue"), each=9), sep="_"), "GLM_ANOVA_Pvalue", "GLM_ANOVA_FDR")
> 
> # See how many miRNA sequences were significantly associated with ILD
> sig.ind = (abs(results[,"GLM_ILD_Coef"]) > log(1.25) | abs(results[,"GLM_COPD_Coef"]) > log(1.25)) & results[,"GLM_ANOVA_FDR"] < 0.1
> print(sum(sig.ind, na.rm = TRUE))
[1] 24
> 
> # Create results table for supplement
> seed <- substring(rownames(seq.counts), 2, 8)
> canonical <- rep(NA, length(seed))
> canonical[seed == "GGCAGTG"] <- "5p"
> canonical[seed == "ATCACTA"] <- "3p"
> 
> results.df <- data.frame(Sequence = rownames(seq.counts), Seed = seed, Canonical_Seed = canonical, Average_RPM = seq.rpm.mean, Total = seq.total, results)
> write.table(results.df, "mir34c_top25_DE_results.txt", row.names=FALSE, sep="\t", quote=FALSE)
> 
> 
> # Plot results in a bar plot
> color <- seed
> color[seed == "GGCAGTG"] <- "GGCAGTG (5p Canonical)"
> color[seed == "ATCACTA"] <- "ATCACTA (3p Canonical)"
> color[seed == "AGGCAGT"] <- "AGGCAGT (5p isomiR)"
> color[seed == "GCAGTGT"] <- "GCAGTGT (5p isomiR)"
> color[seed == "TCACTAA"] <- "TCACTAA (3p isomiR)"
> color <- factor(color, levels = c("GGCAGTG (5p Canonical)", "ATCACTA (3p Canonical)", "AGGCAGT (5p isomiR)", "GCAGTGT (5p isomiR)", "TCACTAA (3p isomiR)"))
> 
> sequences <- factor(rownames(results.df), levels = rev(rownames(results.df)))
> 
> pdf("mir34c_top25_expression.pdf", useDingbats=FALSE)
> df <- data.frame(Sequence = sequences, Expression=results.df$Average_RPM, Index=nrow(results.df):1, color=color)
> ggplot(df, aes(x = Sequence, y = Expression, fill=color)) + geom_col() + theme_bw() +
+ 	scale_fill_brewer(palette="Dark2") +
+ 	guides(color=guide_legend(title="Seed")) +
+ 	xlab("Top 25 hsa-miR-34c sequences") + ylab("Expression (Average RPM)") +
+ 	theme(axis.text.x = element_text(angle = 45, hjust=1), panel.grid=element_blank())
> dev.off()
null device 
          1 
> 
> 
> 
> 
> sessionInfo()
R version 4.0.2 (2020-06-22)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS:   /share/pkg.7/r/4.0.2/install/lib/libopenblasp-r0.3.7.so
LAPACK: /share/pkg.7/r/4.0.2/install/lib/liblapack.so.3.9.0

locale:
[1] C

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggplot2_3.3.5       affy_1.66.0         Biobase_2.50.0     
[4] BiocGenerics_0.36.1 MASS_7.3-51.6      

loaded via a namespace (and not attached):
 [1] magrittr_2.0.1        zlibbioc_1.36.0       tidyselect_1.1.0     
 [4] munsell_0.5.0         colorspace_2.0-2      R6_2.5.0             
 [7] rlang_0.4.11          dplyr_1.0.1           grid_4.0.2           
[10] gtable_0.3.0          withr_2.4.2           ellipsis_0.3.1       
[13] digest_0.6.27         tibble_3.0.3          preprocessCore_1.50.0
[16] lifecycle_0.2.0       crayon_1.3.4          affyio_1.58.0        
[19] farver_2.0.3          RColorBrewer_1.1-2    BiocManager_1.30.10  
[22] purrr_0.3.4           vctrs_0.3.8           glue_1.4.2           
[25] labeling_0.4.2        compiler_4.0.2        pillar_1.4.6         
[28] generics_0.1.0        scales_1.1.1          pkgconfig_2.0.3      
> 
